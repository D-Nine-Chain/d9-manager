import { Messages } from './types.ts';

export const messages: Record<'en' | 'zh', Messages> = {
  en: {
    welcome: 'üöÄ D9 Node Manager',
    languagePrompt: 'Choose your language / ÈÄâÊã©ÊÇ®ÁöÑËØ≠Ë®Ä',
    checkingBinary: 'Checking for D9 node binary, please hold...',
    binaryNotFound: 'D9 node binary not found. Would you like to install it?',
    keyAccessPrompt: 'Can we access your node\'s keystore? (y/n)',
    checkingBalance: 'Checking account balance...',
    mainMenu: 'What would you like to do?',
    setupNewNode: 'Setup a new node',
    submitCandidacy: 'Submit validator candidacy',
    convertNode: 'Convert existing node',
    nodeTypes: {
      full: {
        name: 'Full Node',
        description: 'A full node that validates transactions and maintains the complete blockchain state',
        requirements: 'Requires at least 60GB of storage'
      },
      validator: {
        name: 'Validator Node', 
        description: 'A validator node that participates in consensus. Must be voted for by the community. Only top 27 nodes can be validators and must remain online.',
        requirements: 'Requires at least 60GB of storage'
      },
      archiver: {
        name: 'Archiver Node',
        description: 'An archiver node that stores historical blockchain data',
        requirements: 'Requires at least 120GB of storage'
      }
    },
    candidacyForm: {
      namePrompt: 'What name do you want the public to see?',
      nameNote: 'Note: This name will be visible to everyone on the network',
      confirmSubmission: 'Submit candidacy with this information?'
    },
    progress: {
      installing: 'Installing D9 node...',
      configuring: 'Configuring node...',
      complete: 'Setup complete!'
    },
    errors: {
      insufficientFunds: 'Insufficient funds for transaction',
      networkError: 'Network connection error',
      keyNotFound: 'Keystore not found or invalid',
      diskSpace: 'Insufficient disk space'
    },
    setup: {
      checkingRequirements: 'Checking system requirements...',
      osCompatible: 'OS compatible',
      osIncompatible: 'Error: This script only supports Ubuntu 22.04 or Debian 11+ x64. Please use a supported OS.',
      archCompatible: 'Architecture: x86_64',
      archIncompatible: 'Error: This script only supports x86_64 architecture. ARM64/aarch64 users please use the build from source script.',
      selectNodeType: 'Select node type:',
      continueWithNodeType: 'Continue with this node type?',
      checkingDiskSpace: 'Current disk usage:',
      currentDiskUsage: 'Current disk usage:',
      requiredSpace: 'Required space:',
      sufficientDiskSpace: 'Sufficient disk space',
      insufficientDiskSpace: 'Error: You need at least %sGB of free disk space. Please free up some space and try again.',
      configuringSwap: 'Configuring swap file...',
      swapConfigured: 'Swap configured (1GB)',
      runningInMode: 'Running in %s mode',
      creatingServiceUser: 'Creating dedicated service user...',
      serviceUserExists: 'Service user d9-node already exists',
      serviceUserCreated: 'Created service user d9-node',
      startingInstallation: 'Starting D9 node installation...',
      updatingPackages: 'Updating package lists...',
      packagesUpdated: 'Package lists updated',
      installingPackages: 'Installing required packages...',
      packagesInstalled: 'Required packages installed',
      checkingGlibc: 'Checking GLIBC version...',
      glibcCompatible: 'GLIBC is compatible',
      glibcIncompatible: 'GLIBC version is incompatible',
      upgradingGlibc: 'Attempting to upgrade GLIBC...',
      fetchingRelease: 'Fetching latest release information...',
      downloadingBinary: 'Downloading D9 node binary...',
      downloadingChecksum: 'Downloading checksum file...',
      verifyingIntegrity: 'Verifying file integrity...',
      integrityVerified: 'File integrity verified',
      extractingBinary: 'Extracting binary...',
      binaryExtracted: 'Binary extracted',
      installingBinary: 'Installing binary to /usr/local/bin/...',
      downloadingChainSpec: 'Downloading chain specification...',
      chainSpecDownloaded: 'Chain specification downloaded',
      creatingDataDir: 'Creating data directory...',
      installationComplete: 'D9 node installation completed successfully!',
      enterNodeName: 'Enter a name for your node:',
      startingNodeService: 'Starting D9 node service...',
      nodeStartingUp: 'Node is starting up. Here are the recent logs:',
      recentLogs: 'Recent Logs:',
      pressCtrlC: 'Press Ctrl+C to stop viewing logs',
      keysAlreadyExist: 'Keys already exist',
      noKeysFound: 'No keys found. Generate new keys?',
      generateNewKeys: 'Generate new keys?',
      stoppingService: 'Stopping d9-node service...',
      serviceNotRunning: 'Note: Service might not be running yet, continuing...',
      generatingSeed: 'Generating seed phrase...',
      importantSaveThis: 'IMPORTANT - Save this seed phrase:',
      pressEnterWhenSaved: 'Press Enter when you have saved it...',
      selectSecurityMode: 'Select security mode:',
      securityModes: {
        easy: 'Easy (Recommended) - Automated secure setup',
        advanced: 'Advanced - Maximum security, requires manual steps',
        legacy: 'Legacy - Compatible with v1 (not recommended)'
      },
      existingInstallation: 'Existing installation detected - using legacy mode',
      advancedKeyGeneration: 'Advanced Key Generation Mode',
      advancedKeyGenDescription: 'This mode uses hierarchical deterministic key derivation for enhanced security.',
      creatingSecurePassword: 'Creating secure password for key derivation',
      enterPasswordPrompt: 'Enter password for key derivation:',
      confirmPasswordPrompt: 'Confirm password:',
      passwordsDoNotMatch: 'Passwords do not match. Please try again.',
      generatingRootMnemonic: 'Generating root mnemonic...',
      criticalSecurityInfo: 'CRITICAL SECURITY INFORMATION',
      rootMnemonicLabel: 'Your ROOT MNEMONIC:',
      rootMnemonicWarning1: 'This root key will NOT be stored locally on this machine.',
      rootMnemonicWarning2: 'If you lose this mnemonic, you will lose access to your validator.',
      rootMnemonicWarning3: 'Write it down and store it in a secure location.',
      understandNotStored: 'Do you understand that this root mnemonic will NOT be stored locally?',
      mustAcknowledge: 'User must acknowledge security requirements',
      secondConfirmation: 'SECOND CONFIRMATION REQUIRED',
      rootNotStoredWarning: 'The root mnemonic will NOT be stored locally.',
      mustSaveYourself: 'You must save it yourself or lose access forever.',
      confirmUnderstand: 'Type "1" to confirm you understand:',
      iUnderstandOption: '1 - I understand and have saved the mnemonic',
      cancelOption: '0 - Cancel setup',
      setupCancelled: 'Setup cancelled by user',
      verifyingBackup: 'Verifying your mnemonic backup...',
      provideWords: 'Please provide words %s from your mnemonic:',
      wordPrompt: 'Word %s:',
      incorrectWord: 'Incorrect! Expected word %s but got "%s"',
      mnemonicVerified: 'Mnemonic verification successful!',
      derivingSessionKeys: 'Deriving Session Keys',
      generatingDeterministic: 'Generating deterministic keys from root mnemonic...',
      onlyDerivedStored: 'Only derived key seeds will be stored - root mnemonic remains offline.',
      derivingKeyFrom: 'Deriving %s key from path: %s',
      yourSessionKeys: 'Your Session Keys:',
      sessionKeysDescription: 'These are your PUBLIC session keys (safe to share):',
      publicKeysOnly: 'These are only the PUBLIC addresses, not the private keys.',
      onlyDerivedHex: 'Only derived private key hex values are stored in the keystore.',
      rootNeverStored: 'The root mnemonic is NEVER stored on this machine.',
      filesGenerated: 'Files generated:',
      certificateFile: 'd9-certificate.txt - Share this to show your validator setup',
      debugFile: 'd9-debug-info.json - Technical details for troubleshooting',
      ubuntu2204: 'Ubuntu 22.04',
      debian12: 'Debian 12',
      currentGlibcVersion: 'Current GLIBC version:',
      requiredGlibcVersion: 'Required GLIBC version: 2.38 or higher',
      addingUbuntuRepo: 'Adding Ubuntu 24.04 repository for newer glibc...',
      addingDebianRepo: 'Adding Debian testing repository for newer glibc...',
      updatingPackageLists: 'Updating package lists...',
      installingNewGlibc: 'Installing newer glibc...',
      newGlibcVersion: 'New GLIBC version:',
      glibcUpgradeSuccess: 'GLIBC successfully upgraded to a compatible version',
      downloadUrl: 'Download URL:',
      hashUrl: 'Hash URL:',
      preparingChecksum: 'Preparing checksum file...',
      extractingArchive: 'Extracting tar archive...',
      installingToUsrBin: 'Installing binary to /usr/local/bin/...',
      downloadingChainSpec2: 'Downloading chain spec...',
      creatingDataDirectory: 'Creating data directory...',
      stoppingService2: 'Stopping d9-node service...',
      currently: 'Currently deriving %s service key...',
      publicSessionKeys: 'These are your PUBLIC session keys (safe to share):',
      publicAddressesOnly: 'These are only the PUBLIC addresses, not the actual keys.',
      derivedKeysStored: 'The derived session keys are stored in the node keystore.',
      rootNotStoredLocal: 'The root key and service keys are NOT stored on this machine.',
      filesGenerated2: 'Files generated:',
      shareThisCert: 'd9-certificate.txt - Share this to show your validator setup',
      technicalDetails: 'd9-debug-info.json - Technical details for troubleshooting'
    }
  },
  zh: {
    welcome: 'üöÄ D9 ËäÇÁÇπÁÆ°ÁêÜÂô®',
    languagePrompt: 'Choose your language / ÈÄâÊã©ÊÇ®ÁöÑËØ≠Ë®Ä',
    checkingBinary: 'Ê≠£Âú®Ê£ÄÊü• D9 ËäÇÁÇπ‰∫åËøõÂà∂Êñá‰ª∂ÔºåËØ∑Á®çÂÄô...',
    binaryNotFound: 'Êú™ÊâæÂà∞ D9 ËäÇÁÇπ‰∫åËøõÂà∂Êñá‰ª∂„ÄÇÊÇ®ÊÉ≥Ë¶ÅÂÆâË£ÖÂÆÉÂêóÔºü',
    keyAccessPrompt: 'Êàë‰ª¨ÂèØ‰ª•ËÆøÈóÆÊÇ®ËäÇÁÇπÁöÑÂØÜÈí•Â∫ìÂêóÔºü(y/n)',
    checkingBalance: 'Ê≠£Âú®Ê£ÄÊü•Ë¥¶Êà∑‰ΩôÈ¢ù...',
    mainMenu: 'ÊÇ®ÊÉ≥Ë¶ÅÂÅö‰ªÄ‰πàÔºü',
    setupNewNode: 'ËÆæÁΩÆÊñ∞ËäÇÁÇπ',
    submitCandidacy: 'Êèê‰∫§È™åËØÅËÄÖÂÄôÈÄâ',
    convertNode: 'ËΩ¨Êç¢Áé∞ÊúâËäÇÁÇπ',
    nodeTypes: {
      full: {
        name: 'ÂÖ®ËäÇÁÇπ',
        description: 'È™åËØÅ‰∫§ÊòìÂπ∂Áª¥Êä§ÂÆåÊï¥Âå∫ÂùóÈìæÁä∂ÊÄÅÁöÑÂÖ®ËäÇÁÇπ',
        requirements: 'ÈúÄË¶ÅËá≥Â∞ë 60GB Â≠òÂÇ®Á©∫Èó¥'
      },
      validator: {
        name: 'È™åËØÅËÄÖËäÇÁÇπ',
        description: 'ÂèÇ‰∏éÂÖ±ËØÜÁöÑÈ™åËØÅËÄÖËäÇÁÇπ„ÄÇÂøÖÈ°ªËé∑ÂæóÁ§æÂå∫ÊäïÁ•®„ÄÇÂè™ÊúâÂâç27‰∏™ËäÇÁÇπÂèØ‰ª•Êàê‰∏∫È™åËØÅËÄÖÔºå‰∏îÂøÖÈ°ª‰øùÊåÅÂú®Á∫ø„ÄÇ',
        requirements: 'ÈúÄË¶ÅËá≥Â∞ë 60GB Â≠òÂÇ®Á©∫Èó¥'
      },
      archiver: {
        name: 'ÂΩíÊ°£ËäÇÁÇπ',
        description: 'Â≠òÂÇ®ÂéÜÂè≤Âå∫ÂùóÈìæÊï∞ÊçÆÁöÑÂΩíÊ°£ËäÇÁÇπ',
        requirements: 'ÈúÄË¶ÅËá≥Â∞ë 120GB Â≠òÂÇ®Á©∫Èó¥'
      }
    },
    candidacyForm: {
      namePrompt: 'ÊÇ®Â∏åÊúõÂÖ¨‰ºóÁúãÂà∞‰ªÄ‰πàÂêçÂ≠óÔºü',
      nameNote: 'Ê≥®ÊÑèÔºöÊ≠§ÂêçÂ≠óÂ∞ÜÂØπÁΩëÁªú‰∏äÁöÑÊâÄÊúâ‰∫∫ÂèØËßÅ',
      confirmSubmission: '‰ΩøÁî®Ê≠§‰ø°ÊÅØÊèê‰∫§ÂÄôÈÄâÔºü'
    },
    progress: {
      installing: 'Ê≠£Âú®ÂÆâË£Ö D9 ËäÇÁÇπ...',
      configuring: 'Ê≠£Âú®ÈÖçÁΩÆËäÇÁÇπ...',
      complete: 'ËÆæÁΩÆÂÆåÊàêÔºÅ'
    },
    errors: {
      insufficientFunds: '‰∫§ÊòìËµÑÈáë‰∏çË∂≥',
      networkError: 'ÁΩëÁªúËøûÊé•ÈîôËØØ',
      keyNotFound: 'Êú™ÊâæÂà∞ÂØÜÈí•Â∫ìÊàñÂØÜÈí•Â∫ìÊó†Êïà',
      diskSpace: 'Á£ÅÁõòÁ©∫Èó¥‰∏çË∂≥'
    },
    setup: {
      checkingRequirements: 'Ê≠£Âú®Ê£ÄÊü•Á≥ªÁªüË¶ÅÊ±Ç...',
      osCompatible: 'Êìç‰ΩúÁ≥ªÁªüÂÖºÂÆπ',
      osIncompatible: 'ÈîôËØØÔºöÊ≠§ËÑöÊú¨‰ªÖÊîØÊåÅ Ubuntu 22.04 Êàñ Debian 11+ x64„ÄÇËØ∑‰ΩøÁî®ÊîØÊåÅÁöÑÊìç‰ΩúÁ≥ªÁªü„ÄÇ',
      archCompatible: 'Êû∂ÊûÑÔºöx86_64',
      archIncompatible: 'ÈîôËØØÔºöÊ≠§ËÑöÊú¨‰ªÖÊîØÊåÅ x86_64 Êû∂ÊûÑ„ÄÇARM64/aarch64 Áî®Êà∑ËØ∑‰ΩøÁî®Ê∫êÁ†ÅÊûÑÂª∫ËÑöÊú¨„ÄÇ',
      selectNodeType: 'ÈÄâÊã©ËäÇÁÇπÁ±ªÂûãÔºö',
      continueWithNodeType: 'ÁªßÁª≠‰ΩøÁî®Ê≠§ËäÇÁÇπÁ±ªÂûãÔºü',
      checkingDiskSpace: 'ÂΩìÂâçÁ£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµÔºö',
      currentDiskUsage: 'ÂΩìÂâçÁ£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµÔºö',
      requiredSpace: 'ÊâÄÈúÄÁ©∫Èó¥Ôºö',
      sufficientDiskSpace: 'Á£ÅÁõòÁ©∫Èó¥ÂÖÖË∂≥',
      insufficientDiskSpace: 'ÈîôËØØÔºöÊÇ®ÈúÄË¶ÅËá≥Â∞ë %sGB ÁöÑÂèØÁî®Á£ÅÁõòÁ©∫Èó¥„ÄÇËØ∑ÈáäÊîæ‰∏Ä‰∫õÁ©∫Èó¥ÂêéÈáçËØï„ÄÇ',
      configuringSwap: 'Ê≠£Âú®ÈÖçÁΩÆ‰∫§Êç¢Êñá‰ª∂...',
      swapConfigured: '‰∫§Êç¢Êñá‰ª∂Â∑≤ÈÖçÁΩÆÔºà1GBÔºâ',
      runningInMode: 'ËøêË°åÂú® %s Ê®°Âºè',
      creatingServiceUser: 'Ê≠£Âú®ÂàõÂª∫‰∏ìÁî®ÊúçÂä°Áî®Êà∑...',
      serviceUserExists: 'ÊúçÂä°Áî®Êà∑ d9-node Â∑≤Â≠òÂú®',
      serviceUserCreated: 'Â∑≤ÂàõÂª∫ÊúçÂä°Áî®Êà∑ d9-node',
      startingInstallation: 'ÂºÄÂßãÂÆâË£Ö D9 ËäÇÁÇπ...',
      updatingPackages: 'Ê≠£Âú®Êõ¥Êñ∞ËΩØ‰ª∂ÂåÖÂàóË°®...',
      packagesUpdated: 'ËΩØ‰ª∂ÂåÖÂàóË°®Â∑≤Êõ¥Êñ∞',
      installingPackages: 'Ê≠£Âú®ÂÆâË£ÖÊâÄÈúÄËΩØ‰ª∂ÂåÖ...',
      packagesInstalled: 'ÊâÄÈúÄËΩØ‰ª∂ÂåÖÂ∑≤ÂÆâË£Ö',
      checkingGlibc: 'Ê≠£Âú®Ê£ÄÊü• GLIBC ÁâàÊú¨...',
      glibcCompatible: 'GLIBC ÂÖºÂÆπ',
      glibcIncompatible: 'GLIBC ÁâàÊú¨‰∏çÂÖºÂÆπ',
      upgradingGlibc: 'Ê≠£Âú®Â∞ùËØïÂçáÁ∫ß GLIBC...',
      fetchingRelease: 'Ê≠£Âú®Ëé∑ÂèñÊúÄÊñ∞ÁâàÊú¨‰ø°ÊÅØ...',
      downloadingBinary: 'Ê≠£Âú®‰∏ãËΩΩ D9 ËäÇÁÇπ‰∫åËøõÂà∂Êñá‰ª∂...',
      downloadingChecksum: 'Ê≠£Âú®‰∏ãËΩΩÊ†°È™åÂíåÊñá‰ª∂...',
      verifyingIntegrity: 'Ê≠£Âú®È™åËØÅÊñá‰ª∂ÂÆåÊï¥ÊÄß...',
      integrityVerified: 'Êñá‰ª∂ÂÆåÊï¥ÊÄßÂ∑≤È™åËØÅ',
      extractingBinary: 'Ê≠£Âú®ÊèêÂèñ‰∫åËøõÂà∂Êñá‰ª∂...',
      binaryExtracted: '‰∫åËøõÂà∂Êñá‰ª∂Â∑≤ÊèêÂèñ',
      installingBinary: 'Ê≠£Âú®Â∞Ü‰∫åËøõÂà∂Êñá‰ª∂ÂÆâË£ÖÂà∞ /usr/local/bin/...',
      downloadingChainSpec: 'Ê≠£Âú®‰∏ãËΩΩÈìæËßÑËåÉ...',
      chainSpecDownloaded: 'ÈìæËßÑËåÉÂ∑≤‰∏ãËΩΩ',
      creatingDataDir: 'Ê≠£Âú®ÂàõÂª∫Êï∞ÊçÆÁõÆÂΩï...',
      installationComplete: 'D9 ËäÇÁÇπÂÆâË£ÖÊàêÂäüÂÆåÊàêÔºÅ',
      enterNodeName: 'ËæìÂÖ•ËäÇÁÇπÂêçÁß∞Ôºö',
      startingNodeService: 'Ê≠£Âú®ÂêØÂä® D9 ËäÇÁÇπÊúçÂä°...',
      nodeStartingUp: 'ËäÇÁÇπÊ≠£Âú®ÂêØÂä®„ÄÇ‰ª•‰∏ãÊòØÊúÄÊñ∞Êó•ÂøóÔºö',
      recentLogs: 'ÊúÄÊñ∞Êó•ÂøóÔºö',
      pressCtrlC: 'Êåâ Ctrl+C ÂÅúÊ≠¢Êü•ÁúãÊó•Âøó',
      keysAlreadyExist: 'ÂØÜÈí•Â∑≤Â≠òÂú®',
      noKeysFound: 'Êú™ÊâæÂà∞ÂØÜÈí•„ÄÇÊòØÂê¶ÁîüÊàêÊñ∞ÂØÜÈí•Ôºü',
      generateNewKeys: 'ÊòØÂê¶ÁîüÊàêÊñ∞ÂØÜÈí•Ôºü',
      stoppingService: 'Ê≠£Âú®ÂÅúÊ≠¢ d9-node ÊúçÂä°...',
      serviceNotRunning: 'Ê≥®ÊÑèÔºöÊúçÂä°ÂèØËÉΩÂ∞öÊú™ËøêË°åÔºåÁªßÁª≠...',
      generatingSeed: 'Ê≠£Âú®ÁîüÊàêÁßçÂ≠êÁü≠ËØ≠...',
      importantSaveThis: 'ÈáçË¶Å - ‰øùÂ≠òÊ≠§ÁßçÂ≠êÁü≠ËØ≠Ôºö',
      pressEnterWhenSaved: '‰øùÂ≠òÂêéÊåâ Enter ÈîÆ...',
      selectSecurityMode: 'ÈÄâÊã©ÂÆâÂÖ®Ê®°ÂºèÔºö',
      securityModes: {
        easy: 'ÁÆÄÊòìÔºàÊé®ËçêÔºâ- Ëá™Âä®ÂÆâÂÖ®ËÆæÁΩÆ',
        advanced: 'È´òÁ∫ß - ÊúÄÈ´òÂÆâÂÖ®ÊÄßÔºåÈúÄË¶ÅÊâãÂä®Ê≠•È™§',
        legacy: '‰º†Áªü - ‰∏é v1 ÂÖºÂÆπÔºà‰∏çÊé®ËçêÔºâ'
      },
      existingInstallation: 'Ê£ÄÊµãÂà∞Áé∞ÊúâÂÆâË£Ö - ‰ΩøÁî®‰º†ÁªüÊ®°Âºè',
      advancedKeyGeneration: 'È´òÁ∫ßÂØÜÈí•ÁîüÊàêÊ®°Âºè',
      advancedKeyGenDescription: 'Ê≠§Ê®°Âºè‰ΩøÁî®ÂàÜÂ±ÇÁ°ÆÂÆöÊÄßÂØÜÈí•Ê¥æÁîü‰ª•Â¢ûÂº∫ÂÆâÂÖ®ÊÄß„ÄÇ',
      creatingSecurePassword: 'Ê≠£Âú®ÂàõÂª∫ÂØÜÈí•Ê¥æÁîüÁöÑÂÆâÂÖ®ÂØÜÁ†Å',
      enterPasswordPrompt: 'ËæìÂÖ•ÂØÜÈí•Ê¥æÁîüÂØÜÁ†ÅÔºö',
      confirmPasswordPrompt: 'Á°ÆËÆ§ÂØÜÁ†ÅÔºö',
      passwordsDoNotMatch: 'ÂØÜÁ†Å‰∏çÂåπÈÖç„ÄÇËØ∑ÈáçËØï„ÄÇ',
      generatingRootMnemonic: 'Ê≠£Âú®ÁîüÊàêÊ†πÂä©ËÆ∞ËØç...',
      criticalSecurityInfo: 'ÂÖ≥ÈîÆÂÆâÂÖ®‰ø°ÊÅØ',
      rootMnemonicLabel: 'ÊÇ®ÁöÑÊ†πÂä©ËÆ∞ËØçÔºö',
      rootMnemonicWarning1: 'Ê≠§Ê†πÂØÜÈí•‰∏ç‰ºöÂ≠òÂÇ®Âú®Êú¨Êú∫‰∏ä„ÄÇ',
      rootMnemonicWarning2: 'Â¶ÇÊûúÊÇ®‰∏¢Â§±Ê≠§Âä©ËÆ∞ËØçÔºåÊÇ®Â∞ÜÂ§±ÂéªÂØπÈ™åËØÅËÄÖÁöÑËÆøÈóÆÊùÉÈôê„ÄÇ',
      rootMnemonicWarning3: 'ËØ∑Â∞ÜÂÖ∂ÂÜô‰∏ãÂπ∂Â≠òÂÇ®Âú®ÂÆâÂÖ®ÁöÑÂú∞Êñπ„ÄÇ',
      understandNotStored: 'ÊÇ®ÊòØÂê¶ÊòéÁôΩÊ≠§Ê†πÂä©ËÆ∞ËØç‰∏ç‰ºöÂ≠òÂÇ®Âú®Êú¨Âú∞Ôºü',
      mustAcknowledge: 'Áî®Êà∑ÂøÖÈ°ªÁ°ÆËÆ§ÂÆâÂÖ®Ë¶ÅÊ±Ç',
      secondConfirmation: 'ÈúÄË¶ÅÁ¨¨‰∫åÊ¨°Á°ÆËÆ§',
      rootNotStoredWarning: 'Ê†πÂä©ËÆ∞ËØç‰∏ç‰ºöÂ≠òÂÇ®Âú®Êú¨Âú∞„ÄÇ',
      mustSaveYourself: 'ÊÇ®ÂøÖÈ°ªËá™Ë°å‰øùÂ≠òÔºåÂê¶ÂàôÂ∞ÜÊ∞∏ËøúÂ§±ÂéªËÆøÈóÆÊùÉÈôê„ÄÇ',
      confirmUnderstand: 'ËæìÂÖ•"1"Á°ÆËÆ§ÊÇ®Â∑≤ÁêÜËß£Ôºö',
      iUnderstandOption: '1 - ÊàëÂ∑≤ÁêÜËß£Âπ∂‰øùÂ≠ò‰∫ÜÂä©ËÆ∞ËØç',
      cancelOption: '0 - ÂèñÊ∂àËÆæÁΩÆ',
      setupCancelled: 'Áî®Êà∑ÂèñÊ∂à‰∫ÜËÆæÁΩÆ',
      verifyingBackup: 'Ê≠£Âú®È™åËØÅÊÇ®ÁöÑÂä©ËÆ∞ËØçÂ§á‰ªΩ...',
      provideWords: 'ËØ∑Êèê‰æõÂä©ËÆ∞ËØç‰∏≠ÁöÑÁ¨¨ %s ‰∏™ËØçÔºö',
      wordPrompt: 'Á¨¨ %s ‰∏™ËØçÔºö',
      incorrectWord: 'ÈîôËØØÔºÅÈ¢ÑÊúüÁ¨¨ %s ‰∏™ËØçÔºå‰ΩÜÊî∂Âà∞"%s"',
      mnemonicVerified: 'Âä©ËÆ∞ËØçÈ™åËØÅÊàêÂäüÔºÅ',
      derivingSessionKeys: 'Ê¥æÁîü‰ºöËØùÂØÜÈí•',
      generatingDeterministic: 'Ê≠£Âú®‰ªéÊ†πÂä©ËÆ∞ËØçÁîüÊàêÁ°ÆÂÆöÊÄßÂØÜÈí•...',
      onlyDerivedStored: '‰ªÖÂ≠òÂÇ®Ê¥æÁîüÁöÑÂØÜÈí•ÁßçÂ≠ê - Ê†πÂä©ËÆ∞ËØç‰øùÊåÅÁ¶ªÁ∫ø„ÄÇ',
      derivingKeyFrom: '‰ªéË∑ØÂæÑÊ¥æÁîü %s ÂØÜÈí•Ôºö%s',
      yourSessionKeys: 'ÊÇ®ÁöÑ‰ºöËØùÂØÜÈí•Ôºö',
      sessionKeysDescription: 'Ëøô‰∫õÊòØÊÇ®ÁöÑÂÖ¨ÂºÄ‰ºöËØùÂØÜÈí•ÔºàÂèØ‰ª•ÂÆâÂÖ®ÂÖ±‰∫´ÔºâÔºö',
      publicKeysOnly: 'Ëøô‰∫õ‰ªÖÊòØÂÖ¨ÂºÄÂú∞ÂùÄÔºå‰∏çÊòØÁßÅÈí•„ÄÇ',
      onlyDerivedHex: 'ÂØÜÈí•Â∫ì‰∏≠‰ªÖÂ≠òÂÇ®Ê¥æÁîüÁöÑÁßÅÈí•ÂçÅÂÖ≠ËøõÂà∂ÂÄº„ÄÇ',
      rootNeverStored: 'Ê†πÂä©ËÆ∞ËØçÊ∞∏Ëøú‰∏ç‰ºöÂ≠òÂÇ®Âú®Êú¨Êú∫‰∏ä„ÄÇ',
      filesGenerated: 'ÁîüÊàêÁöÑÊñá‰ª∂Ôºö',
      certificateFile: 'd9-certificate.txt - ÂàÜ‰∫´Ê≠§Êñá‰ª∂‰ª•Â±ïÁ§∫ÊÇ®ÁöÑÈ™åËØÅËÄÖËÆæÁΩÆ',
      debugFile: 'd9-debug-info.json - Áî®‰∫éÊïÖÈöúÊéíÈô§ÁöÑÊäÄÊúØËØ¶ÊÉÖ',
      ubuntu2204: 'Ubuntu 22.04',
      debian12: 'Debian 12',
      currentGlibcVersion: 'ÂΩìÂâç GLIBC ÁâàÊú¨Ôºö',
      requiredGlibcVersion: 'ÊâÄÈúÄ GLIBC ÁâàÊú¨Ôºö2.38 ÊàñÊõ¥È´ò',
      addingUbuntuRepo: 'Ê≠£Âú®Ê∑ªÂä† Ubuntu 24.04 ‰ªìÂ∫ì‰ª•Ëé∑ÂèñÊõ¥Êñ∞ÁöÑ glibc...',
      addingDebianRepo: 'Ê≠£Âú®Ê∑ªÂä† Debian testing ‰ªìÂ∫ì‰ª•Ëé∑ÂèñÊõ¥Êñ∞ÁöÑ glibc...',
      updatingPackageLists: 'Ê≠£Âú®Êõ¥Êñ∞ËΩØ‰ª∂ÂåÖÂàóË°®...',
      installingNewGlibc: 'Ê≠£Âú®ÂÆâË£ÖÊõ¥Êñ∞ÁöÑ glibc...',
      newGlibcVersion: 'Êñ∞ GLIBC ÁâàÊú¨Ôºö',
      glibcUpgradeSuccess: 'GLIBC Â∑≤ÊàêÂäüÂçáÁ∫ßÂà∞ÂÖºÂÆπÁâàÊú¨',
      downloadUrl: '‰∏ãËΩΩ URLÔºö',
      hashUrl: 'ÂìàÂ∏å URLÔºö',
      preparingChecksum: 'Ê≠£Âú®ÂáÜÂ§áÊ†°È™åÂíåÊñá‰ª∂...',
      extractingArchive: 'Ê≠£Âú®ÊèêÂèñ tar ÂΩíÊ°£...',
      installingToUsrBin: 'Ê≠£Âú®Â∞Ü‰∫åËøõÂà∂Êñá‰ª∂ÂÆâË£ÖÂà∞ /usr/local/bin/...',
      downloadingChainSpec2: 'Ê≠£Âú®‰∏ãËΩΩÈìæËßÑËåÉ...',
      creatingDataDirectory: 'Ê≠£Âú®ÂàõÂª∫Êï∞ÊçÆÁõÆÂΩï...',
      stoppingService2: 'Ê≠£Âú®ÂÅúÊ≠¢ d9-node ÊúçÂä°...',
      currently: 'Ê≠£Âú®Ê¥æÁîü %s ÊúçÂä°ÂØÜÈí•...',
      publicSessionKeys: 'Ëøô‰∫õÊòØÊÇ®ÁöÑÂÖ¨ÂºÄ‰ºöËØùÂØÜÈí•ÔºàÂèØ‰ª•ÂÆâÂÖ®ÂÖ±‰∫´ÔºâÔºö',
      publicAddressesOnly: 'Ëøô‰∫õ‰ªÖÊòØÂÖ¨ÂºÄÂú∞ÂùÄÔºå‰∏çÊòØÂÆûÈôÖÂØÜÈí•„ÄÇ',
      derivedKeysStored: 'Ê¥æÁîüÁöÑ‰ºöËØùÂØÜÈí•Â≠òÂÇ®Âú®ËäÇÁÇπÂØÜÈí•Â∫ì‰∏≠„ÄÇ',
      rootNotStoredLocal: 'Ê†πÂØÜÈí•ÂíåÊúçÂä°ÂØÜÈí•‰∏çÂ≠òÂÇ®Âú®Êú¨Êú∫‰∏ä„ÄÇ',
      filesGenerated2: 'ÁîüÊàêÁöÑÊñá‰ª∂Ôºö',
      shareThisCert: 'd9-certificate.txt - ÂàÜ‰∫´Ê≠§Êñá‰ª∂‰ª•Â±ïÁ§∫ÊÇ®ÁöÑÈ™åËØÅËÄÖËÆæÁΩÆ',
      technicalDetails: 'd9-debug-info.json - Áî®‰∫éÊïÖÈöúÊéíÈô§ÁöÑÊäÄÊúØËØ¶ÊÉÖ'
    }
  }
};

export function getMessage(lang: 'en' | 'zh'): Messages {
  return messages[lang];
}