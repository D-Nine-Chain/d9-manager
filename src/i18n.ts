import { Messages } from './types.ts';

export const messages: Record<'en' | 'zh', Messages> = {
  en: {
    welcome: '🚀 D9 Node Manager',
    languagePrompt: 'Choose your language / 选择您的语言',
    checkingBinary: 'Checking for D9 node binary, please hold...',
    binaryNotFound: 'D9 node binary not found. Would you like to install it?',
    keyAccessPrompt: 'Can we access your node\'s keystore? (y/n)',
    checkingBalance: 'Checking account balance...',
    mainMenu: 'What would you like to do?',
    setupNewNode: 'Setup a new node',
    submitCandidacy: 'Submit validator candidacy',
    convertNode: 'Convert existing node',
    nodeTypes: {
      full: {
        name: 'Full Node',
        description: 'A full node that validates transactions and maintains the complete blockchain state',
        requirements: 'Requires at least 60GB of storage'
      },
      validator: {
        name: 'Validator Node', 
        description: 'A validator node that participates in consensus. Must be voted for by the community. Only top 27 nodes can be validators and must remain online.',
        requirements: 'Requires at least 60GB of storage'
      },
      archiver: {
        name: 'Archiver Node',
        description: 'An archiver node that stores historical blockchain data',
        requirements: 'Requires at least 120GB of storage'
      }
    },
    candidacyForm: {
      namePrompt: 'What name do you want the public to see?',
      nameNote: 'Note: This name will be visible to everyone on the network',
      confirmSubmission: 'Submit candidacy with this information?'
    },
    progress: {
      installing: 'Installing D9 node...',
      configuring: 'Configuring node...',
      complete: 'Setup complete!',
      noInstallation: 'No installation in progress',
      title: '\n📊 Installation Progress',
      mode: 'Mode:',
      nodeType: 'Node Type:',
      started: 'Started:',
      progressLabel: 'Progress:',
      stepsLabel: '\nSteps:',
      errorLabel: '     Error:'
    },
    errors: {
      insufficientFunds: 'Insufficient funds for transaction',
      networkError: 'Network connection error',
      keyNotFound: 'Keystore not found or invalid',
      diskSpace: 'Insufficient disk space'
    },
    setup: {
      checkingRequirements: 'Checking system requirements...',
      osCompatible: 'OS compatible',
      osIncompatible: 'Error: This script only supports Ubuntu 22.04 or Debian 11+ x64. Please use a supported OS.',
      archCompatible: 'Architecture: x86_64',
      archIncompatible: 'Error: This script only supports x86_64 architecture. ARM64/aarch64 users please use the build from source script.',
      selectNodeType: 'Select node type:',
      continueWithNodeType: 'Continue with this node type?',
      checkingDiskSpace: 'Current disk usage:',
      currentDiskUsage: 'Current disk usage:',
      requiredSpace: 'Required space:',
      sufficientDiskSpace: 'Sufficient disk space',
      insufficientDiskSpace: 'Error: You need at least %sGB of free disk space. Please free up some space and try again.',
      configuringSwap: 'Configuring swap file...',
      swapConfigured: 'Swap configured (1GB)',
      runningInMode: 'Running in %s mode',
      creatingServiceUser: 'Creating dedicated service user...',
      serviceUserExists: 'Service user d9-node already exists',
      serviceUserCreated: 'Created service user d9-node',
      startingInstallation: 'Starting D9 node installation...',
      updatingPackages: 'Updating package lists...',
      packagesUpdated: 'Package lists updated',
      installingPackages: 'Installing required packages...',
      packagesInstalled: 'Required packages installed',
      checkingGlibc: 'Checking GLIBC version...',
      glibcCompatible: 'GLIBC is compatible',
      glibcIncompatible: 'GLIBC version is incompatible',
      upgradingGlibc: 'Attempting to upgrade GLIBC...',
      fetchingRelease: 'Fetching latest release information...',
      downloadingBinary: 'Downloading D9 node binary...',
      downloadingChecksum: 'Downloading checksum file...',
      verifyingIntegrity: 'Verifying file integrity...',
      integrityVerified: 'File integrity verified',
      extractingBinary: 'Extracting binary...',
      binaryExtracted: 'Binary extracted',
      installingBinary: 'Installing binary to /usr/local/bin/...',
      downloadingChainSpec: 'Downloading chain specification...',
      chainSpecDownloaded: 'Chain specification downloaded',
      creatingDataDir: 'Creating data directory...',
      installationComplete: 'D9 node installation completed successfully!',
      enterNodeName: 'Enter a name for your node:',
      startingNodeService: 'Starting D9 node service...',
      nodeStartingUp: 'Node is starting up. Here are the recent logs:',
      recentLogs: 'Recent Logs:',
      pressCtrlC: 'Press Ctrl+C to stop viewing logs',
      keysAlreadyExist: 'Keys already exist',
      noKeysFound: 'No keys found. Generate new keys?',
      generateNewKeys: 'Generate new keys?',
      stoppingService: 'Stopping d9-node service...',
      serviceNotRunning: 'Note: Service might not be running yet, continuing...',
      generatingSeed: 'Generating seed phrase...',
      importantSaveThis: 'IMPORTANT - Save this seed phrase:',
      pressEnterWhenSaved: 'Press Enter when you have saved it...',
      selectSecurityMode: 'Select security mode:',
      securityModes: {
        easy: 'Easy (Recommended) - Automated secure setup',
        advanced: 'Advanced - Maximum security, requires manual steps',
        legacy: 'Legacy - Compatible with v1 (not recommended)'
      },
      existingInstallation: 'Existing installation detected - using legacy mode',
      advancedKeyGeneration: 'Advanced Key Generation Mode',
      advancedKeyGenDescription: 'This mode uses hierarchical deterministic key derivation for enhanced security.',
      creatingSecurePassword: 'Creating secure password for key derivation',
      enterPasswordPrompt: 'Enter password for key derivation:',
      confirmPasswordPrompt: 'Confirm password:',
      passwordsDoNotMatch: 'Passwords do not match. Please try again.',
      generatingRootMnemonic: 'Generating root mnemonic...',
      criticalSecurityInfo: 'CRITICAL SECURITY INFORMATION',
      rootMnemonicLabel: 'Your ROOT MNEMONIC:',
      rootMnemonicWarning1: 'This root key will NOT be stored locally on this machine.',
      rootMnemonicWarning2: 'If you lose this mnemonic, you will lose access to your validator.',
      rootMnemonicWarning3: 'Write it down and store it in a secure location.',
      understandNotStored: 'Do you understand that this root mnemonic will NOT be stored locally?',
      mustAcknowledge: 'User must acknowledge security requirements',
      secondConfirmation: 'SECOND CONFIRMATION REQUIRED',
      rootNotStoredWarning: 'The root mnemonic will NOT be stored locally.',
      mustSaveYourself: 'You must save it yourself or lose access forever.',
      confirmUnderstand: 'Type "1" to confirm you understand:',
      iUnderstandOption: '1 - I understand and have saved the mnemonic',
      cancelOption: '0 - Cancel setup',
      setupCancelled: 'Setup cancelled by user',
      verifyingBackup: 'Verifying your mnemonic backup...',
      provideWords: 'Please provide words %s from your mnemonic:',
      wordPrompt: 'Word %s:',
      incorrectWord: 'Incorrect! Expected word %s but got "%s"',
      mnemonicVerified: 'Mnemonic verification successful!',
      derivingSessionKeys: 'Deriving Session Keys',
      generatingDeterministic: 'Generating deterministic keys from root mnemonic...',
      onlyDerivedStored: 'Only derived key seeds will be stored - root mnemonic remains offline.',
      derivingKeyFrom: 'Deriving %s key from path: %s',
      yourSessionKeys: 'Your Session Keys:',
      sessionKeysDescription: 'These are your PUBLIC session keys (safe to share):',
      publicKeysOnly: 'These are only the PUBLIC addresses, not the private keys.',
      onlyDerivedHex: 'Only derived private key hex values are stored in the keystore.',
      rootNeverStored: 'The root mnemonic is NEVER stored on this machine.',
      filesGenerated: 'Files generated:',
      certificateFile: 'd9-certificate.txt - Share this to show your validator setup',
      debugFile: 'd9-debug-info.json - Technical details for troubleshooting',
      ubuntu2204: 'Ubuntu 22.04',
      debian12: 'Debian 12',
      currentGlibcVersion: 'Current GLIBC version:',
      requiredGlibcVersion: 'Required GLIBC version: 2.38 or higher',
      addingUbuntuRepo: 'Adding Ubuntu 24.04 repository for newer glibc...',
      addingDebianRepo: 'Adding Debian testing repository for newer glibc...',
      updatingPackageLists: 'Updating package lists...',
      installingNewGlibc: 'Installing newer glibc...',
      newGlibcVersion: 'New GLIBC version:',
      glibcUpgradeSuccess: 'GLIBC successfully upgraded to a compatible version',
      downloadUrl: 'Download URL:',
      hashUrl: 'Hash URL:',
      preparingChecksum: 'Preparing checksum file...',
      extractingArchive: 'Extracting tar archive...',
      installingToUsrBin: 'Installing binary to /usr/local/bin/...',
      downloadingChainSpec2: 'Downloading chain spec...',
      creatingDataDirectory: 'Creating data directory...',
      stoppingService2: 'Stopping d9-node service...',
      currently: 'Currently deriving %s service key...',
      publicSessionKeys: 'These are your PUBLIC session keys (safe to share):',
      publicAddressesOnly: 'These are only the PUBLIC addresses, not the actual keys.',
      derivedKeysStored: 'The derived session keys are stored in the node keystore.',
      rootNotStoredLocal: 'The root key and service keys are NOT stored on this machine.',
      filesGenerated2: 'Files generated:',
      shareThisCert: 'd9-certificate.txt - Share this to show your validator setup',
      technicalDetails: 'd9-debug-info.json - Technical details for troubleshooting',
      suriExplanationTitle: '💡 About Secret URIs (SURIs):',
      suriExplanationDesc: '   A SURI is a Secret URI format for key derivation',
      suriFormatLabel: '   Format: seed_phrase//derivation_path',
      suriExampleBase: '     - Base key: "word1 word2 word3..."',
      suriExampleDerived: '     - Derived key: "word1 word2 word3...//grandpa"',
      suriExampleAdvanced: '     - Further derived: "word1 word2 word3...//im_online//0"',
      suriAutoProvided: '   The tool will automatically provide these to d9-node.',
      suriHierarchicalTitle: '💡 Hierarchical Derivation:',
      suriHierarchicalDesc: '   Root mnemonic + derivation paths = unique keys',
      suriHierarchicalFormat: '   Format: root_mnemonic//service//index',
      suriHierarchicalExample1: '     - Aura: root//aura//0',
      suriHierarchicalExample2: '     - Grandpa: root//grandpa//0',
      suriHierarchicalNote: '   Each service gets a unique key derived from the same root.',
      insertingKeyType: '  Inserting %s key...',
      suriErrorHelp: '💡 If prompted for URI, enter the seed phrase with optional //derivation//path',
      suriErrorExample: '   Example: "word1 word2 ... word12//grandpa"'
    },
    keyGeneration: {
      generatingSeedPhrase: '\n🔑 Generating seed phrase...',
      importantSavePhrase: '\n🔑 IMPORTANT - Save this seed phrase:',
      seedPhraseLabel: '"%s"',
      pressEnterWhenSaved: 'Press Enter when you have saved it...',
      advancedModeTitle: '\n🔐 Advanced Key Generation Mode',
      advancedModeDesc: 'This mode uses hierarchical deterministic key derivation for enhanced security.\n',
      securingKeys: '\n🔐 Securely inserting keys into keystore...',
      creatingPassword: '🔒 Creating secure password for key derivation',
      enterPassword: 'Enter password for key derivation:',
      confirmPassword: 'Confirm password:',
      passwordMismatch: '❌ Passwords do not match. Please try again.\n',
      generatingRootMnemonic: '\n🌱 Generating root mnemonic...',
      criticalSecurityTitle: '\n🚨 CRITICAL SECURITY INFORMATION',
      rootMnemonicLabel: 'Your ROOT MNEMONIC:',
      rootNotStoredWarning1: '⚠️  This root key will NOT be stored locally on this machine.',
      rootNotStoredWarning2: '⚠️  If you lose this mnemonic, you will lose access to your validator.',
      rootNotStoredWarning3: '⚠️  Write it down and store it in a secure location.',
      understandPrompt: 'Do you understand that this root mnemonic will NOT be stored locally?',
      mustAcknowledge: 'User must acknowledge security requirements',
      secondConfirmTitle: '\n🔴 SECOND CONFIRMATION REQUIRED',
      rootNotStoredLocalWarning: 'The root mnemonic will NOT be stored locally.',
      mustSaveWarning: 'You must save it yourself or lose access forever.',
      confirmOptions: 'Type "1" to confirm you understand:',
      optionUnderstand: '1 - I understand and have saved the mnemonic',
      optionCancel: '0 - Cancel setup',
      setupCancelled: 'Setup cancelled by user',
      verifyingBackup: '\n🔍 Verifying your mnemonic backup...',
      provideWordsPrompt: 'Please provide words %s from your mnemonic:',
      wordNumberPrompt: 'Word %s:',
      incorrectWordError: 'Incorrect! Expected word %s but got "%s"',
      verificationSuccess: '✅ Mnemonic verification successful!',
      derivingKeys: '\n🔧 Deriving session keys from root...',
      currentlyDeriving: 'Currently deriving %s service key...',
      keyInserted: '  ✅ %s key inserted'
    },
    transaction: {
      startingExecution: '\n🚀 Starting transaction execution',
      pendingSteps: '📊 %s pending steps out of %s total',
      executing: '\n⏳ %s...',
      alreadyDone: '⏭️  Already done, skipping',
      validationFailed: '❌ Validation failed: %s',
      failed: '❌ Failed: %s',
      completed: '✅ Completed',
      completedSuccessfully: '\n🎉 Transaction completed successfully!',
      transactionFailed: '\n❌ Transaction failed: %s',
      rollingBack: '🔄 Rolling back completed operations...',
      rolledBack: '  ✅ Rolled back: %s',
      rollbackFailed: '  ⚠️  Failed to rollback %s: %s',
      stateSaved: '\n💾 Transaction state saved - you can resume later',
      stateCleared: '🧹 Transaction state cleared',
      resuming: '\n🔄 Resuming transaction from last checkpoint',
      notInitialized: 'Transaction not initialized. Call initialize() or loadExisting() first.',
      noExistingTransaction: 'No existing transaction to resume',
      cannotResume: 'Transaction cannot be resumed (either completed or no progress made)',
      stepNotFound: 'Step not found: %s',
      operationNotFound: 'Operation not found for step: %s'
    }
  },
  zh: {
    welcome: '🚀 D9 节点管理器',
    languagePrompt: 'Choose your language / 选择您的语言',
    checkingBinary: '正在检查 D9 节点二进制文件，请稍候...',
    binaryNotFound: '未找到 D9 节点二进制文件。您想要安装它吗？',
    keyAccessPrompt: '我们可以访问您节点的密钥库吗？(y/n)',
    checkingBalance: '正在检查账户余额...',
    mainMenu: '您想要做什么？',
    setupNewNode: '设置新节点',
    submitCandidacy: '提交验证者候选',
    convertNode: '转换现有节点',
    nodeTypes: {
      full: {
        name: '全节点',
        description: '验证交易并维护完整区块链状态的全节点',
        requirements: '需要至少 60GB 存储空间'
      },
      validator: {
        name: '验证者节点',
        description: '参与共识的验证者节点。必须获得社区投票。只有前27个节点可以成为验证者，且必须保持在线。',
        requirements: '需要至少 60GB 存储空间'
      },
      archiver: {
        name: '归档节点',
        description: '存储历史区块链数据的归档节点',
        requirements: '需要至少 120GB 存储空间'
      }
    },
    candidacyForm: {
      namePrompt: '您希望公众看到什么名字？',
      nameNote: '注意：此名字将对网络上的所有人可见',
      confirmSubmission: '使用此信息提交候选？'
    },
    progress: {
      installing: '正在安装 D9 节点...',
      configuring: '正在配置节点...',
      complete: '设置完成！',
      noInstallation: '没有正在进行的安装',
      title: '\n📊 安装进度',
      mode: '模式：',
      nodeType: '节点类型：',
      started: '开始时间：',
      progressLabel: '进度：',
      stepsLabel: '\n步骤：',
      errorLabel: '     错误：'
    },
    errors: {
      insufficientFunds: '交易资金不足',
      networkError: '网络连接错误',
      keyNotFound: '未找到密钥库或密钥库无效',
      diskSpace: '磁盘空间不足'
    },
    setup: {
      checkingRequirements: '正在检查系统要求...',
      osCompatible: '操作系统兼容',
      osIncompatible: '错误：此脚本仅支持 Ubuntu 22.04 或 Debian 11+ x64。请使用支持的操作系统。',
      archCompatible: '架构：x86_64',
      archIncompatible: '错误：此脚本仅支持 x86_64 架构。ARM64/aarch64 用户请使用源码构建脚本。',
      selectNodeType: '选择节点类型：',
      continueWithNodeType: '继续使用此节点类型？',
      checkingDiskSpace: '当前磁盘使用情况：',
      currentDiskUsage: '当前磁盘使用情况：',
      requiredSpace: '所需空间：',
      sufficientDiskSpace: '磁盘空间充足',
      insufficientDiskSpace: '错误：您需要至少 %sGB 的可用磁盘空间。请释放一些空间后重试。',
      configuringSwap: '正在配置交换文件...',
      swapConfigured: '交换文件已配置（1GB）',
      runningInMode: '运行在 %s 模式',
      creatingServiceUser: '正在创建专用服务用户...',
      serviceUserExists: '服务用户 d9-node 已存在',
      serviceUserCreated: '已创建服务用户 d9-node',
      startingInstallation: '开始安装 D9 节点...',
      updatingPackages: '正在更新软件包列表...',
      packagesUpdated: '软件包列表已更新',
      installingPackages: '正在安装所需软件包...',
      packagesInstalled: '所需软件包已安装',
      checkingGlibc: '正在检查 GLIBC 版本...',
      glibcCompatible: 'GLIBC 兼容',
      glibcIncompatible: 'GLIBC 版本不兼容',
      upgradingGlibc: '正在尝试升级 GLIBC...',
      fetchingRelease: '正在获取最新版本信息...',
      downloadingBinary: '正在下载 D9 节点二进制文件...',
      downloadingChecksum: '正在下载校验和文件...',
      verifyingIntegrity: '正在验证文件完整性...',
      integrityVerified: '文件完整性已验证',
      extractingBinary: '正在提取二进制文件...',
      binaryExtracted: '二进制文件已提取',
      installingBinary: '正在将二进制文件安装到 /usr/local/bin/...',
      downloadingChainSpec: '正在下载链规范...',
      chainSpecDownloaded: '链规范已下载',
      creatingDataDir: '正在创建数据目录...',
      installationComplete: 'D9 节点安装成功完成！',
      enterNodeName: '输入节点名称：',
      startingNodeService: '正在启动 D9 节点服务...',
      nodeStartingUp: '节点正在启动。以下是最新日志：',
      recentLogs: '最新日志：',
      pressCtrlC: '按 Ctrl+C 停止查看日志',
      keysAlreadyExist: '密钥已存在',
      noKeysFound: '未找到密钥。是否生成新密钥？',
      generateNewKeys: '是否生成新密钥？',
      stoppingService: '正在停止 d9-node 服务...',
      serviceNotRunning: '注意：服务可能尚未运行，继续...',
      generatingSeed: '正在生成种子短语...',
      importantSaveThis: '重要 - 保存此种子短语：',
      pressEnterWhenSaved: '保存后按 Enter 键...',
      selectSecurityMode: '选择安全模式：',
      securityModes: {
        easy: '简易（推荐）- 自动安全设置',
        advanced: '高级 - 最高安全性，需要手动步骤',
        legacy: '传统 - 与 v1 兼容（不推荐）'
      },
      existingInstallation: '检测到现有安装 - 使用传统模式',
      advancedKeyGeneration: '高级密钥生成模式',
      advancedKeyGenDescription: '此模式使用分层确定性密钥派生以增强安全性。',
      creatingSecurePassword: '正在创建密钥派生的安全密码',
      enterPasswordPrompt: '输入密钥派生密码：',
      confirmPasswordPrompt: '确认密码：',
      passwordsDoNotMatch: '密码不匹配。请重试。',
      generatingRootMnemonic: '正在生成根助记词...',
      criticalSecurityInfo: '关键安全信息',
      rootMnemonicLabel: '您的根助记词：',
      rootMnemonicWarning1: '此根密钥不会存储在本机上。',
      rootMnemonicWarning2: '如果您丢失此助记词，您将失去对验证者的访问权限。',
      rootMnemonicWarning3: '请将其写下并存储在安全的地方。',
      understandNotStored: '您是否明白此根助记词不会存储在本地？',
      mustAcknowledge: '用户必须确认安全要求',
      secondConfirmation: '需要第二次确认',
      rootNotStoredWarning: '根助记词不会存储在本地。',
      mustSaveYourself: '您必须自行保存，否则将永远失去访问权限。',
      confirmUnderstand: '输入"1"确认您已理解：',
      iUnderstandOption: '1 - 我已理解并保存了助记词',
      cancelOption: '0 - 取消设置',
      setupCancelled: '用户取消了设置',
      verifyingBackup: '正在验证您的助记词备份...',
      provideWords: '请提供助记词中的第 %s 个词：',
      wordPrompt: '第 %s 个词：',
      incorrectWord: '错误！预期第 %s 个词，但收到"%s"',
      mnemonicVerified: '助记词验证成功！',
      derivingSessionKeys: '派生会话密钥',
      generatingDeterministic: '正在从根助记词生成确定性密钥...',
      onlyDerivedStored: '仅存储派生的密钥种子 - 根助记词保持离线。',
      derivingKeyFrom: '从路径派生 %s 密钥：%s',
      yourSessionKeys: '您的会话密钥：',
      sessionKeysDescription: '这些是您的公开会话密钥（可以安全共享）：',
      publicKeysOnly: '这些仅是公开地址，不是私钥。',
      onlyDerivedHex: '密钥库中仅存储派生的私钥十六进制值。',
      rootNeverStored: '根助记词永远不会存储在本机上。',
      filesGenerated: '生成的文件：',
      certificateFile: 'd9-certificate.txt - 分享此文件以展示您的验证者设置',
      debugFile: 'd9-debug-info.json - 用于故障排除的技术详情',
      ubuntu2204: 'Ubuntu 22.04',
      debian12: 'Debian 12',
      currentGlibcVersion: '当前 GLIBC 版本：',
      requiredGlibcVersion: '所需 GLIBC 版本：2.38 或更高',
      addingUbuntuRepo: '正在添加 Ubuntu 24.04 仓库以获取更新的 glibc...',
      addingDebianRepo: '正在添加 Debian testing 仓库以获取更新的 glibc...',
      updatingPackageLists: '正在更新软件包列表...',
      installingNewGlibc: '正在安装更新的 glibc...',
      newGlibcVersion: '新 GLIBC 版本：',
      glibcUpgradeSuccess: 'GLIBC 已成功升级到兼容版本',
      downloadUrl: '下载 URL：',
      hashUrl: '哈希 URL：',
      preparingChecksum: '正在准备校验和文件...',
      extractingArchive: '正在提取 tar 归档...',
      installingToUsrBin: '正在将二进制文件安装到 /usr/local/bin/...',
      downloadingChainSpec2: '正在下载链规范...',
      creatingDataDirectory: '正在创建数据目录...',
      stoppingService2: '正在停止 d9-node 服务...',
      currently: '正在派生 %s 服务密钥...',
      publicSessionKeys: '这些是您的公开会话密钥（可以安全共享）：',
      publicAddressesOnly: '这些仅是公开地址，不是实际密钥。',
      derivedKeysStored: '派生的会话密钥存储在节点密钥库中。',
      rootNotStoredLocal: '根密钥和服务密钥不存储在本机上。',
      filesGenerated2: '生成的文件：',
      shareThisCert: 'd9-certificate.txt - 分享此文件以展示您的验证者设置',
      technicalDetails: 'd9-debug-info.json - 用于故障排除的技术详情',
      suriExplanationTitle: '💡 关于秘密 URI (SURI)：',
      suriExplanationDesc: '   SURI 是用于密钥派生的秘密 URI 格式',
      suriFormatLabel: '   格式：种子短语//派生路径',
      suriExampleBase: '     - 基础密钥："词1 词2 词3..."',
      suriExampleDerived: '     - 派生密钥："词1 词2 词3...//grandpa"',
      suriExampleAdvanced: '     - 进一步派生："词1 词2 词3...//im_online//0"',
      suriAutoProvided: '   工具将自动将这些提供给 d9-node。',
      suriHierarchicalTitle: '💡 分层派生：',
      suriHierarchicalDesc: '   根助记词 + 派生路径 = 唯一密钥',
      suriHierarchicalFormat: '   格式：根助记词//服务//索引',
      suriHierarchicalExample1: '     - Aura: root//aura//0',
      suriHierarchicalExample2: '     - Grandpa: root//grandpa//0',
      suriHierarchicalNote: '   每个服务从同一根获得唯一密钥。',
      insertingKeyType: '  正在插入 %s 密钥...',
      suriErrorHelp: '💡 如果提示输入 URI，请输入种子短语和可选的 //派生//路径',
      suriErrorExample: '   示例："词1 词2 ... 词12//grandpa"'
    },
    keyGeneration: {
      generatingSeedPhrase: '\n🔑 正在生成种子短语...',
      importantSavePhrase: '\n🔑 重要 - 保存此种子短语：',
      seedPhraseLabel: '"%s"',
      pressEnterWhenSaved: '保存后按 Enter 键...',
      advancedModeTitle: '\n🔐 高级密钥生成模式',
      advancedModeDesc: '此模式使用分层确定性密钥派生以增强安全性。\n',
      securingKeys: '\n🔐 正在安全地插入密钥到密钥库...',
      creatingPassword: '🔒 正在创建密钥派生的安全密码',
      enterPassword: '输入密钥派生密码：',
      confirmPassword: '确认密码：',
      passwordMismatch: '❌ 密码不匹配。请重试。\n',
      generatingRootMnemonic: '\n🌱 正在生成根助记词...',
      criticalSecurityTitle: '\n🚨 关键安全信息',
      rootMnemonicLabel: '您的根助记词：',
      rootNotStoredWarning1: '⚠️  此根密钥不会存储在本机上。',
      rootNotStoredWarning2: '⚠️  如果您丢失此助记词，您将失去对验证者的访问权限。',
      rootNotStoredWarning3: '⚠️  请将其写下并存储在安全的地方。',
      understandPrompt: '您是否明白此根助记词不会存储在本地？',
      mustAcknowledge: '用户必须确认安全要求',
      secondConfirmTitle: '\n🔴 需要第二次确认',
      rootNotStoredLocalWarning: '根助记词不会存储在本地。',
      mustSaveWarning: '您必须自行保存，否则将永远失去访问权限。',
      confirmOptions: '输入"1"确认您已理解：',
      optionUnderstand: '1 - 我已理解并保存了助记词',
      optionCancel: '0 - 取消设置',
      setupCancelled: '用户取消了设置',
      verifyingBackup: '\n🔍 正在验证您的助记词备份...',
      provideWordsPrompt: '请提供助记词中的第 %s 个词：',
      wordNumberPrompt: '第 %s 个词：',
      incorrectWordError: '错误！预期第 %s 个词，但收到"%s"',
      verificationSuccess: '✅ 助记词验证成功！',
      derivingKeys: '\n🔧 从根派生会话密钥...',
      currentlyDeriving: '正在派生 %s 服务密钥...',
      keyInserted: '  ✅ %s 密钥已插入'
    },
    transaction: {
      startingExecution: '\n🚀 开始事务执行',
      pendingSteps: '📊 总共 %s 步中有 %s 步待处理',
      executing: '\n⏳ %s...',
      alreadyDone: '⏭️  已完成，跳过',
      validationFailed: '❌ 验证失败：%s',
      failed: '❌ 失败：%s',
      completed: '✅ 已完成',
      completedSuccessfully: '\n🎉 事务成功完成！',
      transactionFailed: '\n❌ 事务失败：%s',
      rollingBack: '🔄 正在回滚已完成的操作...',
      rolledBack: '  ✅ 已回滚：%s',
      rollbackFailed: '  ⚠️  回滚 %s 失败：%s',
      stateSaved: '\n💾 事务状态已保存 - 您可以稍后恢复',
      stateCleared: '🧹 事务状态已清除',
      resuming: '\n🔄 从上次检查点恢复事务',
      notInitialized: '事务未初始化。请先调用 initialize() 或 loadExisting()。',
      noExistingTransaction: '没有现有事务可恢复',
      cannotResume: '无法恢复事务（已完成或未取得进展）',
      stepNotFound: '未找到步骤：%s',
      operationNotFound: '未找到步骤的操作：%s'
    }
  }
};

export function getMessage(lang: 'en' | 'zh'): Messages {
  return messages[lang];
}